<div class="spacer">
  <div class="content">
    <div class="container-fluid">
      <div class="row">
        <br><br>
        <div class="stretchy">
          <h1><em>Turning data into information, and information into insight.</em></h1>
        </div>
        <div id="container">
<!--<button class="btn col-md-4" id="button1">5 Yr Analysis</button>
<button class="btn col-md-4" id="button2">Salary Analysis</button>
<button class="btn col-md-4" id="button3">Market Analysis</button>-->

<!-- toggle fade in out sami bubblechart.js-->

<div class="btn col-md-4 tan"><a href="javascript:toggleDiv('remove1');" class="whity">5 Year Analysis</a></div>
<div class="btn col-md-4 tan"><a href="javascript:toggleDiv('remove2');" class="whity">Salary Analysis</a></div>
<div class="btn col-md-4 tan"><a href="javascript:toggleDiv('remove3');" class="whity">Market Analysis</a></div>
<div class="disappear" id="remove1">
  <div id="intro">

    <h3>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
    </h3> 
<!-- <p>
Explore our data visualization to discover what are the trendy companies and what programming skills they are looking for!
<br>
<ul>
<li>Switch between the different tabs to cluster the companies and reveal trends</li>
<li>Mouse-over the bubbles to learn more about each company</li>
</ul>
</p> -->
</div> 
<div id="main" role="main">
  <div id="view_selection" class="btn-group">
    <a href="#" id="all" class="btn">All Companies</a>          
    <a href="#" id="market" class="btn">By Market</a>
    <a href="#" id="funding" class="btn">By Funding</a>
    <a href="#" id="stage" class="btn">By Stage</a>
    <a href="#" id="employees" class="btn">By Number of Employees</a>
  </div>
  <div id="vis"></div>
  <br>
</div>
<br>
<!--<hr>-->
</div>
<br/><br/>
<div class="disappear" id="remove2">
  <p>
    Explore the following Bar chart to discover what are the most in-demand programming skills
  </p>
  <br>
  <div id="BarChart"></div>
  <label><input type="checkbox"> Sort values</label>
  <br>
</div><br>
</div>
<script type="text/javascript">
  d3.csv("Bubble.csv", function(data) {
    custom_bubble_chart.init(data);
    custom_bubble_chart.toggle_view('all');
  });

  $(document).ready(function() {
    $('#view_selection a').click(function() {
      var view_type = $(this).attr('id');
      $('#view_selection a').removeClass('active');
      $(this).toggleClass('active');
      custom_bubble_chart.toggle_view(view_type);	
      return false;
    });
  }); 
</script>
<script></script> 
<script src="./salary.js"></script>               
</div>
</div>
</div>

<div class="content">
  <div class="container-fluid">
    <div class="row">	
      <div class="disappear" id="remove3">
        <div id="page" class="tabContent active">
          <div id="main">
            <div id="interactiveShell">
              <div class="columnGroup firstColumnGroup">
                <div class="ledeStory">
                  <div class="storyHeader"><h1>2015 Start-up Seed Funding</h1></div><!--close .storyHeader -->
                  <div id="interactiveFreeFormMain">
                    <div class="g-content">
                      <div class="g-annotations">
                        <div class="g-annotations-overall">
                          <div class="g-annotation" style="left:100px;">
                            <div class="g-arrows">
                              <div class="g-arrow g-arrow-vertical" style="left:50%;height:60px;"></div>
                              <div class="g-arrow g-arrow-horizontal" style="left:10%;width:80%;bottom:65px;"></div>
                            </div>
                            About one of every five start-ups registered on Angel List received seed funding. Only one of three seed start-ups will move to series funding.
                          </div>
                          <div class="g-annotation" style="left:260px;">
                            <div class="g-arrows">
                              <div class="g-arrow g-arrow-vertical" style="left:33px;height:85px;"></div>
                            </div>
                            Each circle represents a company that is sized by its level of funding. The total seed funding on Angel List for 2015 was 145 million dollars.
                          </div>
                          <div class="g-annotation" style="left:440px;">
                            The range of seed funding varied across markets.  The majority of funding in 2015 was allocated to start-ups focused on data analytics and mobile applications.
                          </div>
                          <div class="g-annotation" style="left:600px;">
                            <div class="g-arrows">
                              <div class="g-arrow g-arrow-vertical" style="bottom:55px;left:-50px;height:px;"></div>
                              <div class="g-arrow g-arrow-vertical" style="bottom:55px;left:-14px;height:px;"></div>
                              <div class="g-arrow g-arrow-vertical" style="bottom:55px;left:215px;height:px;"></div>
                              <div class="g-arrow g-arrow-horizontal" style="bottom:54px;left:-65px;width:266px;"></div>
                              <div class="g-arrow g-arrow-vertical" style="left:38%;height:49px;"></div>
                            </div>
                            The top three funded start-ups supported Mobile applications: Didja $10 million; Trustlook $21.5 million; and Navdy $26.5 million--data not shown.
                          </div>
                        </div>
                      </div>
                      <div class="g-graphic">
                        <div class="g-buttons">
                          <button class="g-button g-active" data-view="overall">The Overall Picture</button>
                          <button class="g-button" data-view="sector">The View by Markets</button>
                        </div>
                      </div>
                      <div class="g-sector-notes"></div>
                      <div class="g-tip" style="width:150px;height:80px;display:none;">
                        <div class="g-tip-shadow"></div>
                        <svg class="g-tip-box" width="150" height="87">
                          <path transform="translate(75,91)" d="M0.5,-6.5l5,-5H74.5v-79H-74.5v79H-5Z"></path>
                        </svg>
                        <div class="g-tip-content">
                          <div class="g-tip-title"></div>
                          <div class="g-tip-metric" data-name="rate">
                            <span class="g-tip-metric-name">Percent</span> <!--Label for pop-up box-->
                            <span class="g-tip-metric-value"></span>
                          </div>
                          <div class="g-tip-metric" data-name="taxes">
                            <span class="g-tip-metric-name">Funding</span>  <!--Label for pop-up box-->
                            <span class="g-tip-metric-value"></span>
                          </div>
                          <div class="g-tip-metric" data-name="earnings">
                            <span class="g-tip-metric-name">Total</span>  <!--Label for pop-up box-->
                            <span class="g-tip-metric-value"></span>
                          </div>
                        </div>
                      </div>
                    </div>
                    <script src="https://static01.nyt.com/newsgraphics/2013/05/13/corporate-taxes/ee84b0191a75f5c652087293ab0efd4710e21f94/lib.js"></script>
                    <script>(function() {
                      var margin = {top: 20, right: 95, bottom: 10, left: 125},
                      width = 1200 - margin.left - margin.right,
                      height,
tickExtension = 20; // extend grid lines beyond scale range

var formatPercent = d3.format(".2%"),
formatTenthPercent = d3.format(".1%"),
formatNumber = d3.format(",.3s"),
formatDollars = function(d) { return (d < 0 ? "-" : "") + "$" + formatNumber(Math.abs(d)) };

var nameAll = "";

var x = d3.scale.linear()
.domain([0, .6])
.rangeRound([0, width - 60])
.clamp(true)
.nice();

var y = d3.scale.ordinal();

var y0 = d3.scale.ordinal()
.domain([nameAll])
.range([150]);

var r = d3.scale.sqrt()
.domain([0, 1e9])
.range([0, 1]);

var z = d3.scale.threshold()
.domain([.001, .002, .003, .004, .005])
.range(["#b35806", "#f1a340", "#fee0b6", "#d8daeb", "#998ec3", "#542788"].reverse());

var xAxis = d3.svg.axis()
.scale(x)
.orient("top")
.ticks(5)
.tickFormat(formatPercent);

var yAxis = d3.svg.axis()
.scale(y)
.orient("left")
.tickSize(-width + 60 - tickExtension * 2, 0)
.tickPadding(6);

var quadtree = d3.geom.quadtree()
.x(function(d) { return d.x; })
.y(function(d) { return d.y; });

var svg = d3.select(".g-graphic").append("svg")
.attr("height", 850 + margin.top + margin.bottom)
.attr("width", width + margin.left + margin.right)
.append("g")
.attr("transform", "translate(" + margin.left + "," + margin.top + ")");

d3.select(".g-graphic").append("svg")
.style("margin-top", "20px")
.attr("height", 80)
.attr("width", width + margin.left + margin.right)
.append("g")
.attr("transform", "translate(" + margin.left + "," + margin.top + ")")
.call(renderChartKey);

var gx = svg.append("g")

var tickLast = gx.selectAll(".g-x .tick:last-of-type");

d3.tsv("/companies.tsv", type, function(error, companies) {
  var sectors = d3.nest()
  .key(function(d) { return d.sector; })
  .entries(companies);

// Compute the overall rate for all data.
var overallRate = rate(d3.sum(companies, taxes), d3.sum(companies, earnings));  //This removes mouseover effect to see data and creates fixed black outlines on circles touched

// Compute the overall rate by sector.
sectors.forEach(function(d) {
d.rate = rate(d3.sum(d.values, taxes), d3.sum(d.values, earnings));  //This provides overall rate for view by industry tab
});

// Sort sectors by ascending overall rate.
sectors.sort(function(a, b) {
  return a.rate - b.rate;
});

// Compute the rate for each company.  //This calculates tax rate and drives  color scale
companies.forEach(function(d) {
  d.rate = rate(d.taxes, d.earnings);
});

height = 120 * sectors.length;  //This formats the bubbles as removal causes them to overlap

y  //This prevents graph from loading
.domain(sectors.map(function(d) { return d.key; }))  //This and rangePoints prevent bubbles from overlapping
.rangePoints([10, height], 1);

svg.append("g") //This prevents graph from loading
.attr("class", "g-y g-axis g-y-axis-sector")  //This function formats view by industry
.attr("transform", "translate(-" + tickExtension + ",0)")
.call(yAxis.scale(y))
.call(yAxisWrap)
.style("stroke-opacity", 0)
.style("fill-opacity", 0)
.selectAll(".tick text,.tick tspan")
.attr("x", -95)
.style("text-anchor", "start");

svg.append("g")
.attr("class", "g-y g-axis g-y-axis-overall")
.attr("transform", "translate(-" + tickExtension + ",0)")
.call(yAxis.scale(y0))
.call(yAxisWrap);

var companyClip = svg.append("defs").selectAll("clipPath")
.data(companies)
.enter().append("clipPath")
.attr("id", function(d, i) { return "g-clip-company-" + i; })
.append("circle")
.attr("cx", function(d) { return d.cx; })
.attr("cy", function(d) { return d.cy - y0(nameAll); })
.attr("r", function(d) { return r(d.capitalization) + 20; });

var gVoronoi = svg.append("g")
.attr("class", "g-voronoi")

gVoronoi.selectAll("path")
.data(companies)
.enter().append("path")
.attr("clip-path", function(d, i) { return "url(#g-clip-company-" + i + ")"; })
.on("mouseover", mouseover)
.on("mouseout", mouseout);

gVoronoi.call(updateVoronoi,
  function(d) { return d.cx; },
  function(d) { return d.cy + y0(nameAll); },
  420);

var sector = svg.append("g")
.attr("class", "g-sector")
.selectAll("g")
.data(sectors)
.enter().append("g")
.attr("transform", function(d) { return "translate(0," + y(d.key) + ")"; });

var sectorNote = d3.select(".g-sector-notes")
.style("opacity", 0)
.style("display", "none")
.selectAll("div")
.data(sectors)
.enter().append("div")
.attr("class", "g-sector-note")
.style("top", function(d) { return y(d.key) + "px"; })
.html(function(d) { return sectorNoteByName[d.key]; });

var sectorCompany = sector.append("g")
.attr("class", "g-sector-company")
.selectAll("circle")
.data(function(d) { return d.values; })
.enter().append("circle")
.attr("cx", function(d) { return d.cx; })
.attr("cy", function(d) { return d.cy - y(d.sector) + y0(nameAll); })
.attr("r", function(d) { return r(d.capitalization); })
.style("fill", function(d) { return isNaN(d.rate) ? null : z(d.rate); })
.on("mouseover", mouseover)
.on("mouseout", mouseout);

var sectorOverall = sector.append("g")
.attr("class", "g-overall")
.attr("transform", function(d) { return "translate(" + x(d.rate) + "," + (y0(nameAll) - y(d.key)) + ")"; })
.style("stroke-opacity", 0)
.style("fill-opacity", 0);

var sectorOverallText = sectorOverall.append("text")

sectorOverallText.append("tspan")

sectorOverallText.filter(function(d, i) { return !i; }).append("tspan")
.attr("x", 0)
.attr("dy", "-11")

var overall = svg.append("g")

overall.append("line")

var overallText = overall.append("text")

overallText.append("tspan")

overallText.append("tspan")

var currentView = "overall";

d3.selectAll(".g-content button[data-view]")
.datum(function(d) { return this.getAttribute("data-view"); })
.on("click", transitionView);

var searchInput = d3.select(".g-search input")
.on("keyup", keyuped);

var searchClear = d3.select(".g-search .g-search-clear")
.on("click", function() {
  searchInput.property("value", "").node().blur();
  search();
});

var tip = d3.select(".g-tip");

var tipMetric = tip.selectAll(".g-tip-metric")
.datum(function() { return this.getAttribute("data-name"); });

d3.selectAll(".g-annotations b,.g-sector-notes b")
.datum(function() { return new RegExp("\\b" + d3.requote(this.textContent), "i"); })
.on("mouseover", mouseoverAnnotation)
.on("mouseout", mouseout);

function keyuped() {
  if (d3.event.keyCode === 27) {
    this.value = "";
    this.blur();
  }
  search(this.value.trim());
}

function search(value) {
  if (value) {
    var re = new RegExp("\\b" + d3.requote(value), "i");
    svg.classed("g-searching", true);
    sectorCompany.classed("g-match", function(d) { return re.test(d.name) || re.test(d.sector) || (d.symbol && re.test(d.symbol)) || (d.alias && re.test(d.alias)); });
    var matches = d3.selectAll(".g-match");
    if (matches[0].length === 1) mouseover(matches.datum());
    else mouseout();
    searchClear.style("display", null);
  } else {
    mouseout();
    svg.classed("g-searching", false);
    sectorCompany.classed("g-match", false);
    searchClear.style("display", "none");
  }
}

function transitionView(view) {
  if (currentView === view) view = view === "overall" ? "sector" : "overall";
  d3.selectAll(".g-buttons button[data-view]").classed("g-active", function(v) { return v === view; })
  switch (currentView = view) {
    case "overall": return void transitionOverall();
    case "sector": return void transitionSector();
  }
}

function transitionOverall() {
  gVoronoi.style("display", "none");

  var transition = d3.transition()
  .duration(750);

  transition.select("svg")
  .delay(720)
  .attr("height", 420 + margin.top + margin.bottom)
  .each("end", function() {
    gVoronoi.call(updateVoronoi,
      function(d) { return d.cx; },
      function(d) { return d.cy + y0(nameAll); },
      420);
  });

  transition.select(".g-annotations-overall")
  .each("start", function() { this.style.display = "block"; })
  .style("opacity", 1);

  transition.select(".g-sector-notes")
  .style("opacity", 0)
  .each("end", function() { this.style.display = "none"; });

  transition.selectAll(".g-y-axis-sector")
  .style("stroke-opacity", 0)
  .style("fill-opacity", 0);

  transition.selectAll(".g-y-axis-overall")
  .style("stroke-opacity", 1)
  .style("fill-opacity", 1);

  var transitionOverall = transition.select(".g-overall-all")
  .delay(x(overallRate))
  .style("stroke-opacity", 1)
  .style("fill-opacity", 1);

  transitionOverall.select("line")
  .attr("y2", +127);

  transitionOverall.select("text")
  .attr("y", -106);

  var transitionSectorOverall = transition.selectAll(".g-sector .g-overall")
  .delay(function(d) { return x(d.rate); })
  .attr("transform", function(d) { return "translate(" + x(d.rate) + "," + (y0(nameAll) - y(d.key)) + ")"; })
  .style("stroke-opacity", 0)
  .style("fill-opacity", 0);

  transitionSectorOverall.select("line")
  .attr("y1", -100)
  .attr("y2", +127);

  transitionSectorOverall.select("text")
  .attr("y", -106);

  transition.selectAll(".g-sector-company circle")
  .delay(function(d) { return d.cx; })
  .attr("cx", function(d) { return d.cx; })
  .attr("cy", function(d) { return d.cy - y(d.sector) + y0(nameAll); });
}

function transitionSector() {
  gVoronoi.style("display", "none");

  var transition = d3.transition()
  .duration(750);

  transition.select("svg")
  .attr("height", height + margin.top + margin.bottom)
  .transition()
  .delay(720)
  .each("end", function() {
    gVoronoi.call(updateVoronoi,
      function(d) { return d.x; },
      function(d) { return y(d.sector) + d.y; },
      height);
  });

  transition.select(".g-annotations-overall")
  .style("opacity", 0)
  .each("end", function() { this.style.display = "none"; });

  transition.select(".g-sector-notes")
  .delay(250)
  .each("start", function() { this.style.display = "block"; })
  .style("opacity", 1);

  transition.selectAll(".g-y-axis-sector,.g-sector-note")
  .delay(250)
  .style("stroke-opacity", 1)
  .style("fill-opacity", 1);

  transition.selectAll(".g-y-axis-overall")
  .style("stroke-opacity", 0)
  .style("fill-opacity", 0);

  var transitionOverall = transition.select(".g-overall-all")
  .delay(x(overallRate))
  .style("stroke-opacity", 0)
  .style("fill-opacity", 0);

  transitionOverall.select("line")
  .attr("y2", height - y0(nameAll));

  var transitionSectorOverall = transition.selectAll(".g-sector .g-overall")
  .delay(function(d) { return x(d.rate); })
  .attr("transform", function(d) { return "translate(" + x(d.rate) + ",0)"; })
  .style("stroke-opacity", 1)
  .style("fill-opacity", 1);

  transitionSectorOverall.select("line")
  .attr("y1", -25)
  .attr("y2", +25);

  transitionSectorOverall.select("text")
  .attr("y", -31);

  transition.selectAll(".g-sector-company circle")
  .delay(function(d) { return d.x; })
  .attr("cx", function(d) { return d.x; })
  .attr("cy", function(d) { return d.y; });
}

function updateVoronoi(gVoronoi, x, y, height) {
  companyClip
  .attr("cx", x)
  .attr("cy", y);

  gVoronoi
  .style("display", null)
  .selectAll("path")
  .data(d3.geom.voronoi().x(x).y(y)(companies))
  .attr("d", function(d) { return "M" + d.join("L") + "Z"; })
  .datum(function(d) { return d.point; });
}

function mouseoverAnnotation(re) {
  var matches = sectorCompany.filter(function(d) { return re.test(d.name) || re.test(d.alias); }).classed("g-active", true);
  if (d3.sum(matches, function(d) { return d.length; }) === 1) mouseover(matches.datum());
  else tip.style("display", "none");
}

function mouseover(d) {
  sectorCompany.filter(function(c) { return c === d; }).classed("g-active", true);

  var dx, dy;
  if (currentView === "overall") dx = d.cx, dy = d.cy + y0(nameAll);
  else dx = d.x, dy = d.y + y(d.sector);
dy -= 19, dx += 50; // margin fudge factors

tip.style("display", null)
.style("top", (dy - r(d.capitalization)) + "px")
.style("left", dx + "px");

tip.select(".g-tip-title")
.text(d.alias || d.name);

tipMetric.select(".g-tip-metric-value").text(function(name) {
  switch (name) {
    case "rate": return isNaN(d.rate) ? "N.A." : formatPercent(d.rate);
    case "taxes": return formatDollars(d.taxes);
    case "earnings": return formatDollars(d.earnings);
  }
});
}

function mouseout() {
  tip.style("display", "none");
  sectorCompany.filter(".g-active").classed("g-active", false);
}
});

function renderChartKey(g) {
  var formatPercent = d3.format(""),
  formatNumber = d3.format("");

// A position encoding for the key only.
var x = d3.scale.linear()
.domain([0, .006])
.range([0, 240]);

var xAxis = d3.svg.axis()
.scale(x)
.orient("bottom")
.tickSize(13)
.tickValues(z.domain())
.tickFormat(function(d) { return d === .5 ? formatPercent(d) : formatNumber(1 * d); });

g.append("text")
.attr("x", -25)
.style("text-anchor", "end")
.style("font", "regular 9px sans-serif")
.text("CHART KEY  ");

var gColor = g.append("g")
.attr("class", "g-key-color")
.attr("transform", "translate(140,-7)");

gColor.selectAll("rect")
.data(z.range().map(function(d, i) {
  return {
    x0: i ? x(z.domain()[i - 1]) : x.range()[0],
    x1: i < 4 ? x(z.domain()[i]) : x.range()[1],
    z: d
  };
}))
.enter().append("rect")
.attr("height", 8)
.attr("x", function(d) { return d.x0; })
.attr("width", function(d) { return d.x1 - d.x0; })
.style("fill", function(d) { return d.z; });

gColor.call(xAxis);

var gColorText = g.append("text")
.attr("x", 140 - 6)
.style("text-anchor", "end");

gColorText.append("tspan")
.style("font-weight", "regular")
.text("Color: ");

gColorText.append("tspan")
.style("fill", "#777")
.text(" shows funding allocation");

var gSize = g.append("g")
.attr("class", "g-key-size")
.attr("transform", "translate(580,-7)");

var gSizeInstance = gSize.selectAll("g")
.data([1e9, 10e9, 50e9, 100e9, 250e9])
.enter().append("g")
.attr("class", "g-sector");

gSizeInstance.append("circle")
.attr("r", r);

gSizeInstance.append("text")
.attr("x", function(d) { return r(d) + 4; })
.attr("dy", ".1em")
.text(function(d) { return "$" + Math.round(d / 1e9) + ""; });

var gSizeX = 0;

gSizeInstance.attr("transform", function() {
  var t = "translate(" + gSizeX + ",3)";
  gSizeX += this.getBBox().width + 15;
  return t;
});

var gSizeText = g.append("text")
.attr("x", 580 - 10)
.style("text-anchor", "end");

gSizeText.append("tspan")
.style("font-weight", "regular")
.text("Size: ");

gSizeText.append("tspan")
.style("fill", "#777")
.text(" shows amount of funding");
}

function yAxisWrap(g) {
  g.selectAll(".tick text")
  .filter(function(d) { return /[ ]/.test(d) && this.getComputedTextLength() > margin.left - tickExtension - 10; })
  .attr("dy", null)
  .each(function(d) {
    d3.select(this).text(null).selectAll("tspan")
    .data(d.split(" "))
    .enter().append("tspan")
    .attr("x", this.getAttribute("x"))
    .attr("dy", function(d, i) { return (i * 1.35 - .35) + "em"; })
    .text(function(d) { return d; });
  });
}

function taxes(d) {
  return d.taxes;
}

function earnings(d) {
  return d.earnings;
}

function rate(taxes, earnings) {
  return earnings <= 0 ? NaN : taxes / earnings;
}

function type(d) {
  d.x = +d.x;
  d.y = +d.y;
  d.cx = +d.cx;
  d.cy = +d.cy;
  d.taxes *= 1e6;
  d.earnings *= 1e6;
  d.capitalization *= 1e6;
  return d;
}

var sectorNoteByName = {
  "Ecommerce": "Start-ups in this category offered electronic products or services to either consumers or businesses to facilitate transactions.  Examples included loyalty programs, digital marketing / advertising, and notary on demand.",
  "Mobile": "This market represented a diverse set of start-ups whose products or services were typically consumer-centric.  On-demand parking, messaging, and video conversation provide a few examples of this space.",
  "Healthcare": "Start-ups in this category provided consumers with information related about the healthcare community or healthcare providers with tools to manage care.  A chemical compendium, physician directory, or nutritional guide were some services offered.",
  "Education": "The education market was comprised of start-ups that offered capabilities to facilitate the learning process.  Examples included memorization aids, story-telling, and tutoring. This market accounted for 4% of 2015 total funding",
  "Enterprise software": "Start-ups offered business-oriented tools whose purpose was to improve an organization's productivity, efficiency, and provide IT security.  Data analytics, management, and security represented the majority of start-ups.",
  "Games": "This market encompassed interactive entertainment offered through connectivity or hardware.  Virtual video games, betting, and fantasy sports teams are some examples of products or services offered.",
};

})()</script>

</div><!--close main free form -->
</div><!--close .ledeStory -->
</div><!--close .columnGroup -->
</div><!--close #interactiveShell -->
</div><!--close #main -->
</div><!--close #page -->
</div><!--close #shell -->   



</div>
</div>
</div>
</div> 






<script >
  $(document).ready(function(){

    demo.initChartist();

    $.notify({
      icon: 'pe-7s-gift',
      message: "Welcome to <b>Angelytics Dashboard</b> - grow your network."
    },{
      type: 'info',
      timer: 4000
    });

  });

</script>




<!-- <script>
$(document).ready(function() {
$('#click').on('click', function() {
$('.container').removeClass("transparent");
})
});

</script> -->


